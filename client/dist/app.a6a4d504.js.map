{"version":3,"sources":["node_modules/regenerator-runtime/runtime.js","src/newProduct.js","src/user/loginOrRegisterUser.js","src/app.js"],"names":["form","newProduct","$","document","on","e","preventDefault","console","log","val","requestBody","productCode","productName","netWeight","unitsPerCase","listPrice","unitBarcode","caseBarcode","activeProduct","ajax","type","url","contentType","data","JSON","stringify","response","alert","searchProductId","success","loginOrRegisterUser","formData","username","password","empty","append"],"mappings":";AAAA;AACA,AGDA;AHEA;AACA,AGDA;AHEA;AACA;AACA,AENA;AFOA,AGHAE,CAAC,CAAC,wBAAD,CAAD,CAA4BiC,MAA5B,CAAmC,mCAAnC;AHIA;AACA;AACA,ACTA,IAAMnC,IAAI,uxHAAV;ADUA;AACA,AC+CA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AD9CzB,AC+CAC,EAAAA,CAAC,CAACC,QAAD,CAAD,CAAYC,EAAZ,CAAe,OAAf,EAAwB,iBAAxB;AD9CA,AC8CA,AC1DA,IAAMJ,IAAI,+DD0DiC,iBAAOK,CAAP,ioBC1D3C;AFaA,AC6C2C;AD5C3C,AC4C2C,AC3C3C,IAAMyB,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AFAlC,AC2C2C,ACzCvC5B,EAAAA,CAAC,CAACC,QAAD,CAAD,CAAYC,EAAZ,CAAe,OAAf,EAAwB,kBAAxB;AFDJ,AC0C2C,ACzCvC,uEAA4C,iBAAOC,CAAP;AFAhD,ACyC2C,ACzCK;AFChD,ACyCIA,AC1C4C,cD0C5CA,CAAC,CAACC,cAAF;ADxCJ,ACyCIC,AC3C4C,cD2C5CA,OAAO,CAACC,GAAR,CAAYN,CAAC,CAAC,eAAD,CAAD,CAAmBO,GAAnB,EAAZ;ADxCJ,ACyCIF,AC5C4C,cD4C5CA,OAAO,CAACC,GAAR,CAAYN,CAAC,CAAC,sBAAD,CAAD,CAA0BO,GAA1B,EAAZ;ADxCJ,ACyCIF,AC7C4C,cD6C5CA,OAAO,CAACC,GAAR,CAAYN,CAAC,CAAC,aAAD,CAAD,CAAiBO,GAAjB,EAAZ;ADxCJ,ACyCIF,AC7CIF,cD6CJE,AC7CIF,CAAC,CAACC,KD6CC,CAACE,GAAR,CAAYN,CAAC,CAAC,EC7CV,WD6CS,CAAD,CAAiBO,GAAjB,EAAZ;ADxCJ,ACyCIF,AC5CUwB,cD4CVxB,AC5CUwB,OD4CH,CAACvB,AC/CoC,GD+C5C,AC5CqB,CD4CTN,CAAC,CAAC,aAAD,CAAD,CAAiBO,GAAjB,EAAZ;ADxCJ,ACyCIF,AC5CQyB,cD4CRzB,EC5CQyB,KD4CD,CAACxB,EC5CQ,CD4ChB,CAAYN,AC5CMA,CD4CL,AC5CM,CD4CL,AC5CM,eD4CP,CAAD,CAAmBO,GAAnB,EAAZ,EC5CmB,CAAD,CAA4BA,GAA5B,EADG;AFKzB,ACyCIF,AC5CQ0B,cD4CR1B,EC5CQ0B,KD4CD,CAACzB,EC5CQ,CD4ChB,CAAYN,AC5CMA,CD4CL,AC5CM,CD4CL,AC5CM,eD4CP,CAAD,CAAmBO,GAAnB,EAAZ,EC5CmB,CAAD,CAA4BA,GAA5B;AFItB,ACyCIF,AC/CqB,cD+CrBA,CClD4C,MDkDrC,CAACC,GAAR,CAAYN,CAAC,0CAAD,CAA0CO,GAA1C,EAAZ;ADxCJ,AC0CUC,AC7CFH,cD6CEG,AC7CFH,OAAO,CAACC,GDkC2B,AClCnC,CAAY,ED6CI,QC7ChB,EAAwBuB,QAAxB;AFIR,AC0CQpB,ACrDwC,gBDqDxCA,WAAW,EAAET,CAAC,CAAC,eAAD,CAAD,CAAmBO,GAAnB,EADG;ADxCxB,AC0CQG,ACtDwC,gBDsDxCA,KC7CuBV,CAAC,CAACiB,ID6Cd,AC7CY,CAAO,CD6CjBjB,CAAC,CAAC,sBAAD,CAAD,CAA0BO,GAA1B,EAFG;ADvCxB,AC0CQI,AC7CIO,gBD6CJP,AC7CIO,IAAI,EAAE,GD6CD,EAAElB,CAAC,AC9CkB,CD8CjB,aAAD,CAAD,CAAiBO,GAAjB,EAHK;ADtCxB,AC0CQK,AC7CIO,gBD6CJP,AC7CIO,GAAG,EAAE,OD6CG,EAAEnB,CAAC,CAAC,SC/Cc,ID+Cf,CAAD,CAAiBO,GAAjB,EAJE;ADrCxB,AC0CQM,AC7CIO,gBD6CJP,AC7CIO,SD6CK,EAAEpB,AC7CI,CD6CH,CAAC,AC7CI,aD6CL,CAAD,CAAiBO,GAAjB,AChDmB,ED2Cd;ADpCxB,AC0CQO,AC7CIO,gBD6CJP,AC7CIO,IAAI,EAAEC,IAAI,CD6CH,AC7CIC,ED6CFvB,CAAC,CAAC,KC7CL,CAAe6B,QAAf,CD6CI,CAAD,CAAmBtB,GAAnB,EANG;ADnCxB,AC0CQQ,AClD8B,eAAP,CDkDvBA,AC3DwC,WD2D7B,EAAEf,CAAC,CAAC,eAAD,CAAD,CAAmBO,GAAnB,EAPG;ADlCxB,AC0CQS,gBAAAA,aAAa,EAAEhB,CAAC,0CAAD,CAA0CO,GAA1C;ADzCvB,ACiCwB,ACpDwB,eDyCL;ADrB3C,ACqB2C,AChC7BiB,cAAAA,QATkC;AFqBhD,ACoB2C,AC1BnCnB,cAAAA,ODgDmBL,AChDZ,CDgDa,AChDZM,CDgDaW,EChDrB,CAAY,CDgDO,CAAO,UChD1B,EAA0BO,QAA1B;AFOR,AC0CQN,AChDAO,cAAAA,EDgDAP,GChDK,CDgDD,AChDE,EDgDA,MADoB,yDC/CrB,CAAL;AFOR,AC0CQC,gBAAAA,GAAG,EAAE,wBAFqB;ADvClC,AC0CQC,AClEwC,gBDkExCA,WAAW,EAAE,kBAHa;ADtClC,AC0CQC,ACnEwC,gBDmExCA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAef,WAAf;ADzCd,ACqCkC,AC/Dc,eD+DrB,CAtBgB;ADd3C,AE3BgD;AF4BhD,ACa2C,ACzCK;AF6BhD,ACkCUgB,AC/DsC,cD+DtCA,QAtBiC;ADX3C,ACuCInB,ACrE4C,KAA5C,SDqEAA,OAAO,CAACC,GAAR,CAAYkB,QAAZ;ADtCJ,ACuCIC,cAAAA,KAAK,CAAC,qBAAD,CAAL;ADtCJ,AEhCI;AFiCJ,ACQ2C,ACzCvC;AFkCJ,ACO2C,ACzCvC;AFmCJ,ACM2C,ACzCvC;AFoCJ,ACK2C,ACtBvCzB,EAAAA,CAAC,CAACC,QAAD,CAAD,CAAYC,EAAZ,CAAe,OAAf,EAAwB,eAAxB;AFkBJ,ACI2C,ACtBvC,wEAAyC,kBAAOC,CAAP;AFmB7C,ACG2C,ACtBE;AFoB7C,ACE2C,ACtBE,KDsB7C;ADDA,AErB6C;AFsB7C,ACAA,ACtB6C;AFuB7C,ACDA,ACtB6C;AFwB7C,ACFA,ACrBQA,cAAAA,CAAC,CAACC,cAAF;AFwBR,ACHA,ACnBcyB,cAAAA,QAH+B,GAGpB;AFuBzB,AC4BA7B,AClDY8B,EDkDZ9B,CAAC,CAACC,QAAD,CAAD,CAAYC,EAAZ,AClDY4B,CDkDG,OAAf,AClDoB,EDkDI,AClDF9B,CAAC,CAAC,aDkDxB,WClDuB,CAAD,CAA4BO,GAA5B,EADG;AFwBzB,AC2BA,ACjDYwB,gBAAAA,QAAQ,EAAE/B,CAAC,CAAC,wBAAD,CAAD,CAA4BO,GAA5B,eDiDmB,kBAAOJ,CAAP;AD1BzC,AC0ByC,ACnDhB,eAHoB;AF6B7C,AC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C2C;ADsC3C,ACtC2C;ADuC3C,ACvC2C;ADwC3C,ACxC2C;ADyC3C,ACzC2C;AD0C3C,AC1C2C,KAA3C;AD2CA;AACA,AC5CA;AD6CA,AC7CA;AD8CA,AC9CA;AD+CA,AC/CA;ADgDA,ACvBAzB,EAAAA,CAAC,CAACC,QAAD,CAAD,CAAYC,EAAZ,CAAe,OAAf,EAAwB,iBAAxB;ADwBA,ACxBA,wEAA2C,kBAAOC,CAAP;ADyB3C,ACzB2C;AD0B3C,AC1B2C;AD2B3C,AC3B2C;AD4B3C,AC5B2C;AD6B3C,AC7B2C;AD8B3C,AC7BIA,cAAAA,CAAC,CAACC,cAAF;AD8BJ,AC7BIC,cAAAA,OAAO,CAACC,GAAR,CAAYN,CAAC,CAAC,aAAD,CAAD,CAAiBO,GAAjB,EAAZ;AD8BJ,AChC2C;ADiC3C,ACjC2C,qBAIhBP,CAAC,CAACiB,IAAF,CAAO;AD8BlC,AC7BQC,gBAAAA,IAAI,EAAE,QADoB;AD+BlC,AC7BQC,gBAAAA,GAAG,sCAA+BnB,CAAC,CAAC,aAAD,CAAD,CAAiBO,GAAjB,EAA/B,CAFuB;ADgClC,AC7BQa,gBAAAA,WAAW,EAAE;AD8BrB,ACjCkC,eAAP,CAJgB;ADsC3C;AACA,ACvC2C;ADwC3C,ACpCUI,cAAAA,QAJiC;ADyC3C,AChCInB,cAAAA,OAAO,CAACC,GAAR,CAAYkB,QAAZ;ADiCJ,AChCIC,cAAAA,KAAK,CAAC,iBAAD,CAAL;ADiCJ;AACA,AC5C2C;AD6C3C,AC7C2C;AD8C3C,AC9C2C;AD+C3C,AC/C2C;ADgD3C,AChD2C;ADiD3C,ACjD2C;ADkD3C,AClD2C,KAA3C;ADmDA;AACA,ACpDA;ADqDA,ACrDA;ADsDA,ACtDA;ADuDA,ACvDA;ADwDA,AC3CA,SAAO3B,IAAP;AD4CA,AC3CC,CAnGD;AD+IA;AACA,eC1CeC;AD2Cffile":"app.a6a4d504.js","sourceRoot":"..","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","\nconst form = `\n<div class=\"row\">\n    <div class=\"col\" id=\"side-col\"></div>\n    <div class=\"col-10\" id=\"master-data-form\">\n        <form id=\"product-form\">\n            <div class=\"form-group\">\n                <label for=\"product-id-label\" id=\"product-id-label\">Product ID</label>\n                <input type=\"text\" class=\"form-control\" id=\"product-id\" placeholder=\"Enter Product ID\" name=\"product-id\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"product-code\" id=\"product-code-label\">Product Code</label>\n                <input type=\"text\" class=\"form-control\" id=\"product-code\" placeholder=\"E.g. FPC123\" name=\"product-code\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"product-description\" id=\"product-description-label\">Product Description</label>\n                <input type=\"text\" class=\"form-control\" id=\"product-description\" placeholder=\"E.g. Acme Vanilla Bean Flavoured Almonds\" name=\"product-description\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"net-weight\" id=\"net-weight-label\">Net Weight</label>\n                <input type=\"text\" class=\"form-control\" id=\"net-weight\" placeholder=\"E.g. 400g\" name=\"net-weight\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"units-case\" id=\"units-case-label\">Units per Case</label>\n                <input type=\"text\" class=\"form-control\" id=\"units-case\" placeholder=\"E.g. 20\" name=\"units-case\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"list-price\" id=\"list-price-label\">List Price</label>\n                <input type=\"text\" class=\"form-control\" id=\"list-price\" placeholder=\"E.g. $30.00\" name=\"list-price\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"unit-barcode\" id=\"unit-barcode-label\">Unit Barcode</label>\n                <input type=\"text\" class=\"form-control\" id=\"unit-barcode\" placeholder=\"E.g. 942112345678\" name=\"unit-barcode\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"case-barcode\" id=\"case-barcode-label\">Case Barcode</label>\n                <input type=\"text\" class=\"form-control\" id=\"case-barcode\" placeholder=\"E.g. 194212345678\" name=\"case-barcode\">\n            </div>\n            <fieldset class=\"form-group\">\n                <legend class=\"col-form-label\" id=\"active-product-label\">Active Product?</legend>\n                <div class=\"form-check form-check-inline\">\n                    <input class=\"form-check-input\" type=\"radio\" id=\"active-product-yes\" name =\"active-product\" value=\"true\">\n                    <label class=\"form-check-label\" for=\"active-product-yes\" id=\"active-product-yes-label\">Yes</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                    <input class=\"form-check-input\" type=\"radio\" id=\"active-product-no\" name =\"active-product\" value=\"false\">\n                    <label class=\"form-check-label\" for=\"active-product-no\" id=\"active-product-no-label\">No</label>\n                </div>\n            </fieldset>\n            <button type=\"button\" id=\"create-product\" class=\"btn btn-success\">Create Product</button>\n            <button type=\"button\" id=\"find-product\" class=\"btn btn-primary\">Find Product</button>\n            <button type=\"button\" id=\"update-product\" class=\"btn btn-warning\">Update Product</button>\n            <button type=\"button\" id=\"delete-product\" class=\"btn btn-danger\">Delete Product</button>\n        </form>\n    </div>\n    <div class=\"col\" id=\"side-col\"></div>\n</div>\n`;\n\nconst newProduct = () => {\n$(document).on(\"click\", \"#create-product\", async (e) => {\n    e.preventDefault();\n    console.log($(\"#product-code\").val());\n    console.log($(\"#product-description\").val());\n    console.log($(\"#net-weight\").val());\n    console.log($(\"#units-case\").val());\n    console.log($(\"#list-price\").val());\n    console.log($(\"#unit-barcode\").val());\n    console.log($(\"#case-barcode\").val());\n    console.log($(`input[name=\"active-product\"]:checked`).val());\n\n    const requestBody = {\n        productCode: $(\"#product-code\").val(),\n        productName: $(\"#product-description\").val(),\n        netWeight: $(\"#net-weight\").val(),\n        unitsPerCase: $(\"#units-case\").val(),\n        listPrice: $(\"#list-price\").val(),\n        unitBarcode: $(\"#unit-barcode\").val(),\n        caseBarcode: $(\"#case-barcode\").val(),\n        activeProduct: $(`input[name=\"active-product\"]:checked`).val()\n    };\n\n    const response = await $.ajax({\n        type: \"POST\",\n        url: \"/api/vault/new-product\",\n        contentType: \"application/json\",\n        data: JSON.stringify(requestBody),\n    });\n    console.log(response);\n    alert(\"New product created\");\n});\n\n$(document).on(\"click\", \"#find-product\", async (e) => {\n    e.preventDefault();\n    const searchProductId = $(\"#product-id\").val();\n    if(searchProductId)   {\n        const response = await $.ajax({\n            type: \"GET\",\n            url: `/api/vault/findbyid/${$(\"#product-id\").val()}`,\n            contentType: \"application/json\",\n            data: { productCode: searchProductId },\n            success: function(data) {\n                $(\"#product-code\").val(data[\"productCode\"]);\n                $(\"#product-description\").val(data[\"productName\"]);\n                $(\"#net-weight\").val(data[\"netWeight\"]);\n                $(\"#units-case\").val(data[\"unitsPerCase\"]);\n                $(\"#list-price\").val(data[\"listPrice\"]);\n                $(\"#unit-barcode\").val(data[\"unitBarcode\"]);\n                $(\"#case-barcode\").val(data[\"caseBarcode\"]);\n                $(`input[name=\"active-product\"]:checked`).val(data[\"activeProduct\"])\n            }\n        });\n        console.log(response);\n    } else {\n        alert(\"No such ID found!\");\n    }\n    console.log($(\"#product-id\").val());\n    });\n\n$(document).on(\"click\", \"#update-product\", async (e) => {\n    e.preventDefault();\n    console.log($(\"#product-id\").val());\n\n    const requestBody = {\n        productCode: $(\"#product-code\").val(),\n        productName: $(\"#product-description\").val(),\n        netWeight: $(\"#net-weight\").val(),\n        unitsPerCase: $(\"#units-case\").val(),\n        listPrice: $(\"#list-price\").val(),\n        unitBarcode: $(\"#unit-barcode\").val(),\n        caseBarcode: $(\"#case-barcode\").val(),\n        activeProduct: $(`input[name=\"active-product\"]:checked`).val()\n    };\n\n    const response = await $.ajax({\n        type: \"PATCH\",\n        url: `/api/vault/update-product/${$(\"#product-id\").val()}`,\n        contentType: \"application/json\",\n        data: JSON.stringify(requestBody),\n    });\n    console.log(response);\n    alert(\"Product updated\");\n});\n\n$(document).on(\"click\", \"#delete-product\", async (e) => {\n    e.preventDefault();\n    console.log($(\"#product-id\").val());\n\n    const response = await $.ajax({\n        type: \"DELETE\",\n        url: `/api/vault/delete-product/${$(\"#product-id\").val()}`,\n        contentType: \"application/json\",\n    });\n    console.log(response);\n    alert(\"Product deleted\");\n});\n\nreturn form;\n};\n\n\nexport default newProduct;","import newProduct from \"../newProduct\";\n\nconst form = `\n    <form id=\"login-register-user\">\n        <div class=\"form-group\">\n            <label for=\"username\">Username</label>\n            <input type=\"text\" id=\"username\" class=\"form-control\" placeholder=\"Enter your username\" name=\"username\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input type=\"text\" id=\"password\" class=\"form-control\" placeholder=\"Enter your password\" name=\"password\">\n        </div>\n        <button type=\"button\" class=\"btn btn-success\" id=\"submit-login\">Login</button>\n        <button type=\"button\" class=\"btn btn-warning\" id=\"submit-register\">Register</button>\n    </form> \n`;\n\nconst loginOrRegisterUser = () => {\n\n    $(document).on(\"click\", \"#submit-register\", async (e) => {\n        e.preventDefault();\n\n        const formData = {\n            username: $(\"input[name='username']\").val(),\n            password: $(\"input[name='password']\").val(),\n        };\n        console.log(\"formData\", formData);\n\n        const response = await $.ajax({\n            type: \"POST\",\n            url: \"/api/user/register\",\n            contentType: \"application/json\",\n            data: JSON.stringify(formData),\n        });\n        console.log(\"response: \", response);\n        alert(\"Thanks for registering!  Click 'login' to proceed to your vault\");\n    });\n\n    $(document).on(\"click\", \"#submit-login\", async (e) => {\n        e.preventDefault();\n\n        const formData = {\n            username: $(\"input[name='username']\").val(),\n            password: $(\"input[name='password']\").val(),\n        };\n        \n        try {\n        const response = await $.ajax({\n            type: \"POST\",\n            url: \"/api/user/login\",\n            contentType: \"application/json\",\n            data: JSON.stringify(formData),\n        });\n        console.log(\"response: \", response);\n        $(\"#append-login-register\").empty();\n        $(\"#append-product-form\").append(newProduct());\n        \n        } catch (err) { \n        alert(\"Invalid credentials - register as a new user or try again\");\n        }\n    });\n    return form;\n};\n\nexport default loginOrRegisterUser;","import \"regenerator-runtime/runtime\";\n\nimport loginOrRegisterUser from \"./user/loginOrRegisterUser\";\n\n$(\"#append-login-register\").append(loginOrRegisterUser());\n\n"]}